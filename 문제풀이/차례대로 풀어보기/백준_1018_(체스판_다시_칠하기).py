# -*- coding: utf-8 -*-
"""백준 1018 (체스판 다시 칠하기)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uEPcnJvmTwh8ymd285CgI53XJmN9kmSc

**문제**

- N*M크기의 체스판이 있다
- 거기서 이제 8*8크기로 잘라서 체스판을 만든다
- 제대로 된 체스판은 두 가지뿐인데, 어떻게 잘랐을 때 다시 칠해야하는 부분이 최소인지 구하여라

**풀이**

- 입력을 일단 다 받는다
- 8*8로 자를 수 있는 모든 가짓수를 포문으로 구현한다
- 각 가짓수에 대해 시작이 W인 경우, B인 경우로 나누어서 차이를 센다
- 최솟값을 리스트에 저장하고, 모든 가짓수를 확인한 다음 리스트이 최솟값을 출력한다

**키 포인트**

- 인덱스를 더해서 홀짝이 같은 부분은 원래 정식 체스판에서 색깔이 똑같다..
- 그 부분을 착안해서 확인한다
"""

N, M = map(int, input().split())

#입력받기
board = []
for _ in range(N):
    board.append(input())

#확인한 값을 저장할 리스트
check = []

#모든 자를 수 있는 가짓수 순회
for i in range(N-7):
    for j in range(M-7):
        diff_B = 0
        diff_W = 0
        #각 가짓수의 모든 칸을 확인
        for k in range(i, i+8):
            for m in range(j, j+8):
                if (k+m) % 2 == 0:
                    if board[k][m] == 'W':
                        diff_B += 1
                    else:
                        diff_W += 1
                else:
                    if board[k][m] == 'W':
                        diff_W += 1
                    else:
                        diff_B += 1
        #최솟값을 추가
        check.append(min(diff_B, diff_W))

print(min(check))