# -*- coding: utf-8 -*-
"""백준 1064 (평행사변형)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZZxXphYOpgaKQM29CBW8rHGavt3YdSag

**문제**

- 점 3개가 주어짐
- 적절히 점 하나를 더 찾아서 네 점으로 평행사변형을 만듦
- 가장 큰 둘레의 길이와 가작 작은 둘레의 길이의 차를 출력
- 평행사변형을 못 만들면 -1 출력

**풀이**

- 평행사변형을 못 만드는 경우 : 세 점이 한 직선 상에 있을 때
    - 기울기를 구할때 x 변화량이 0이 될때를 체크해야한다.
- 그 외에는 항상 평행사변형이 3개가 주어진다.
    - 3C2 가짓수.. 그거를 다 계산해서 확인..
"""

#두 점 사이의 거리 구하는 함수
def distance(X1,Y1,X2,Y2):
    return ((X1-X2)**2 + (Y1-Y2)**2)**0.5

#세 수가 주어질 때 최댓값과 최솟값을 반환하는 함수
def max_min(a,b,c):
    if a>b:
        if b>c:
            return a,c
        elif a>c:
            return a,b
        else:
            return c,b
    else:
        if a>c:
            return b,c
        elif b>c:
            return b,a
        else:
            return c,a

#두 점을 잇는 직선의 기울기를 구하는 함수
def tangent(X1,Y1,X2,Y2):
    if (X2-X1) != 0:
        return (Y2-Y1)/(X2-X1)
    else:
        return 'inf'

x1, y1, x2, y2, x3, y3 = map(int, input().split())

#세 점이 한 직선상에 있으면..
if tangent(x1,y1,x2,y2) == tangent(x2,y2,x3,y3):
    print(-1.0)
#그렇지 않으면 3C2 가짓수가 존재..
else:
    l1 = distance(x1,y1,x2,y2)
    l2 = distance(x2,y2,x3,y3)
    l3 = distance(x1,y1,x3,y3)
    M, m = max_min(l1,l2,l3)
    print(2*(M-m))