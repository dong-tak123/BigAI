# -*- coding: utf-8 -*-
"""백준 4134 (다음 소수)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hr0AS7caxFwznU8M1Fhu5TnPWyjUYATo

**문제**

- 정수가 주어짐
- n보다 크거나 같은 소수 중 가장 작은 소수를 찾아라

**풀이**

- 소수는 2*(주어진 정수)사이에 무조건 하나 있다..
- 이를 이용해서 dp를 구하면 된다..
- 찾으면 바로 break,,
"""

T = int(input())

for _ in range(T):
    N = int(input())
    
    #크기가 2*N인 dp생성
    dp = [False, False] + [True] * (2*N - 1)
    for i in range(2, 2*N + 1):
        if dp[i]:
            for j in range(2*i, 2*N+1, i):
                dp[j] = False
    
    for k in range(N, 2*N+1):
        if dp[k]:
            print(k)
            break

"""**메모리 초과..**

- dp생성말고 그냥 소수 판정법을 이용해서 아예 확인하는 루프를 제곱근 씌우자
"""

def Is_Prime(n):
    if n < 2:
        return False
    elif n <4:
        return True
    else:
        for i in range(2, int(n**0.5)+1):
            if n % i == 0:
                return False
        return True

T = int(input())

for _ in range(T):
    N = int(input())

    while 1:
        if Is_Prime(N):
            break
        N += 1

    print(N)

