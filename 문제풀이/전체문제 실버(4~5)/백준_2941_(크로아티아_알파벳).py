# -*- coding: utf-8 -*-
"""백준 2941 (크로아티아 알파벳)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zXHesITDlXuqUubgffJxbcUK96C756q0

**문제**

- 예를 들어, ljes=njak은 크로아티아 알파벳 6개(lj, e, š, nj, a, k)로 이루어져 있다. 단어가 주어졌을 때, 몇 개의 크로아티아 알파벳으로 이루어져 있는지 출력한다.

**풀이**

- 확인해야하는 걸 리스트에 저장해놓고
- 있으면 어떤 문자로 바꾸고 길이를 확인한다
- 그러면 순서도 상관없음..
"""

S = input()

alpha = ['c=', 'c-', 'dz=', 'd-', 'lj', 'nj', 's=', 'z=']

for j in alpha:
    S = S.replace(j, "!")

print(len(S))

#인덱싱 에러 발생..

string = input()

cnt = 0
i = 0
while i < len(string)-1:
    if string[i] == 'c':
        if string[i+1] == '=' or '-':
            i += 2
        else:
            i += 1
    elif string[i] == 'd':
        if string[i+1] == 'z':
            i += 3
        elif string[i+1] == '-':
            i += 2
        else:
            i += 1
    elif string[i] == 'l':
        if string[i+1] == 'j':
            i += 2
        else:
            i += 1
    elif string[i] == 'n':
        if string[i+1] == 'j':
            i += 2
        else:
            i += 1
    elif string[i] == 's':
        if string[i+1] == '=':
            i += 2
        else:
            i += 1
    elif string[i] == 'z':
        if string[i+1] == '=':
            i += 2
        else:
            i += 1
    else:
        i += 1
    cnt += 1

print(cnt + 1)

d = 'asdf'
print(d[0:2])

