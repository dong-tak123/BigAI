# -*- coding: utf-8 -*-
"""백준 2436 (공약수)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kZbMQep33qoEX4kQ1WPeFvLM4v2HRTCB

**문제**

- 두 수가 주어진다.
- 이 두 수를 최대공약수, 최소공배수로 하는 두개의 자연수 쌍 중에 합이 최소가 되는 두수를 출력한다

**풀이**

- 두 수의 곱은 (최소공배수 * 최대공약수) 이다
- 그 수의 제곱근 부터 내려가면서 그 수의 약수를 찾는다 (즉, 한 쌍을 찾는다)
- 그 한쌍의 최대공약수가 입력된 최대공약수와 같은지 확인한다..
- 처음 찾는게 합이 최소인 두 수이다
"""

def make_gcd(a, b):
    while (b > 0):
        a,b = b, a%b
    return a

GCD, LCM = map(int, input().split())

multi = GCD*LCM

for i in range(int(multi**0.5)+1, 0, -1):
    if multi % i == 0:
        if make_gcd(i, multi // i) == GCD:
            print(i, multi // i)
            break

